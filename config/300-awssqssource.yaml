# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    contrib.eventing.knative.dev/release: devel
    eventing.knative.dev/source: "true"
    duck.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "aws.sqs.message" }
      ]
  name: awssqssources.sources.knative.dev
spec:
  group: sources.knative.dev
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AwsSqsSource
    plural: awssqssources
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            awsCredsSecret:
              type: object
            annotations:
              type: object
            queueUrl:
              type: string
            serviceAccountName:
              type: string
            maxBatchSize:
              type: string
              description: Max Message Size to poll from SQS
            sendBatchedResponse:
              type: string
              description: SendBatchedResponse will send all messages recieved as a single HTTP event rather than individual event per message. value may be true or false
            onFailedPollWaitSecs:
              type: string
              description: OnFailedPollWaitSecs sets the time SQSSource sleeps if it failed to poll from SQS
            waitTimeSeconds:
              type: string
              description: WaitTimeSeconds Controls the maximum time to wait in the poll performed with ReceiveMessageWithContext.  If there are no messages in the given secs, the call times out and returns control to us.
            replicas:
              type: integer
              description: replicas controls the number of replicas of receive-adapter pods per deployment
            nodeSelector:
              type: object
              description: assigns Node Selector to the receive adapter pods
            affinity:
              type: object
              description: assigns affinity to the receive adapter pods
            sink:
              type: object
          required:
            - queueUrl
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    # we use a string in the stored object but a wrapper object
                    # at runtime.
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  severity:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                  - type
                  - status
                type: object
              type: array
            sinkUri:
              type: string
          type: object
  version: v1alpha1
